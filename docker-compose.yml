version: '2'

services:
  nginx:
    build:
      context: ./nginx-container/
      dockerfile: ./nginx-dockerfile
    restart: no
    volumes: # instead of volume mount copy build directory (better for PROD)
    # TODO: disable write
      - type: volume
        source: dist
        target: /app
        read_only: true
    ports:
      - 7443:443
      - 7780:80
    links:
      - apiservice
    depends_on:
      frontendbuild:
        condition: service_completed_successfully
    networks:
      - frontend_network

  apiservice:
    build:
      context: ./fastapi-container
      dockerfile: ./Dockerfile
    restart: no
    # links:
      # - mongodb
    networks:
      - frontend_network
      - backend_network

  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=bob
    command:
      mongod --auth
    volumes:
      - mongo_stuff:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - backend_network
  
  frontendbuild: # just builds and exits
    image: frontenddev:latest
    volumes:
      - type: volume
        source: dist
        target: /tmp/distbuild
      - "./newapp:/root/webapp"
    command: ["/buildscript"]
    restart: no

#TODO: ADD DEV CONTAINERS HERE; add networks as well...

volumes:
  dist:
  mongo_stuff:

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge
